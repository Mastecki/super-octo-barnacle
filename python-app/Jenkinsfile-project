pipeline {
    agent {
        docker {
            image 'python:3.9-alpine'
            args '-v /root/.m2:/root/.m2'
            label 'node01'
        }
    }
    environment { 
        HOME = "${WORKSPACE}/python-app"
        REGISTRY_NAME = "mastecki/project-cicd"
		DOCKERHUB_CREDENTIALS='dockerhub'
        }
    stages {
        stage('Testing') {
            steps {
                dir('python-app/') {
                    sh 'pip install -r requirements.txt'
                    sh '$HOME/.local/bin/pytest . --junit-xml=pytest_junit.xml'
                }
            }
            post {
                always {
                    junit '**/*pytest_junit.xml'
                }
            }
        }
        stage('Build and push') {
            steps {
                dir('python-app/') {
                    script {
                        dockerImage = docker.build REGISTRY_NAME + ":$BUILD_NUMBER"
                        docker.withRegistry('', DOCKERHUB_CREDENTIALS) {
                            dockerImage.push()
                        }
                    }
                }
            }
        }
    }
    post {
        cleanup {
            cleanWs()
        }
    }
}
